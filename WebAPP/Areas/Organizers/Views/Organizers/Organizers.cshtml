@{
	ViewData["Title"] = "Organizers";
}

<script type="text/javascript">
	var organizerVMmap = {
		create: function(options) {
			var self = ko.mapping.fromJS(options.data);
			self.link = ko.pureComputed(function() {
				return "/Organizers/" + self.id();
			});
			return self;
		}
	}

	//Organizers storage
	RootVM.organizers = ko.observableArray();
	RootVM.activeOrganizer = ko.observable({
		name : ko.observable()
	});

	//New organizer name and its validation for creating a new organizer
	RootVM.newOrganizerNameClean = ko.observable("");
	RootVM.newOrganizerNameValid = ko.pureComputed(function() {
		if (RootVM.newOrganizerName().length == 0)
			return false;
		for (i = 0; i < RootVM.organizers().length; i++)
		{
			if (RootVM.organizers()[i].name() != RootVM.newOrganizerName())
				continue;
			return false;
		}
		return true;
	});
	RootVM.newOrganizerName = ko.pureComputed({
		read: RootVM.newOrganizerNameClean,
		write: (value) => RootVM.newOrganizerNameClean(value.trim()),
		owner: this
	});

	//Create new organizer
	RootVM.createNewOrganizer = function(context) {
		fetch("/Organizers/create/" + RootVM.newOrganizerName(), {
			method: "POST"
		})
		.then(response => {
			if (!response.ok)
			{
				(new bootstrap.Modal($("#createOrganizerFailure"))).show();
				return;
			}
			return response.json();
		})
		.then(json => RootVM.organizers.push(ko.mapping.fromJS(json, organizerVMmap)));
	};

	//Sets active organizer from context to use when displaying a modal
	RootVM.setActiveOrganizer = function(context) {
		RootVM.activeOrganizer(context);
	};

	//Delete an existing organizer
	RootVM.deleteOrganizer = function()
	{
		fetch("/Organizers/" + RootVM.activeOrganizer().id() + "/delete", {
			method: "DELETE"
		})
		.then(response => {
			if (!response.ok)
			{
				(new bootstrap.Modal( $("#somethingWentWrongModal"))).show();
				return;
			}
			return response.json();
		}).
		then(json => {
			if (json == undefined)
				return;
			for (i = 0; i < RootVM.organizers().length; i++)
			{
				if (RootVM.organizers()[i].id() != json.id)
					continue;
				RootVM.organizers.splice(i, 1);
				return;
			}
			(new bootstrap.Modal( $("#somethingWentWrongModal"))).show();
		});
	}

	RootVM.renameOrganizer = function()
	{
		fetch("/Organizers/" + RootVM.activeOrganizer().id() + "/rename/" + RootVM.newOrganizerName(), {
			method: "POST"
		})
		.then(response => {
			if (!response.ok)
			{
				(new bootstrap.Modal( $("#somethingWentWrongModal"))).show();
				return;
			}
			return response.json();
		})
		.then(json => {
			if (json == undefined)
				return;
			for (i = 0; i < RootVM.organizers().length; i++)
			{
				if (RootVM.organizers()[i].id() != json.id)
					continue;
				RootVM.organizers()[i].name(json.name);
				return;
			}
		});
	}

	//Request data after page has been loaded
	OnLoadCallback.push( () => {
		$("#createOrganizerModal")[0].addEventListener("hidden.bs.modal", (event) => RootVM.newOrganizerName(""));
		$("#renameOrganizerModal")[0].addEventListener("hidden.bs.modal", (event) => RootVM.newOrganizerName(""));

		fetch("/Organizers/list")
		.then(response => response.json())
		.then(json => ko.mapping.fromJS(json, {
			"organizers": organizerVMmap
		}, RootVM));
	});
</script>

<div data-bind="foreach: organizers">
	<div class="card border-primary mb-3">
		<span class="card-body">
			<div class="container">
				<div class="row">
					<div class="col">
						<span class="h2" data-bind="text: name"></span>
					</div>
					<div class="col col-auto">
						<a role="button" class="btn btn-primary m-1" data-bind="attr: { href: link }">Open</a>
						<a role="button" class="btn btn-primary m-1" data-bind="click: $root.setActiveOrganizer" data-bs-toggle="modal" data-bs-target="#renameOrganizerModal">Rename</a>
						<a role="button" class="btn btn-danger m-1" data-bind="click: $root.setActiveOrganizer" data-bs-toggle="modal" data-bs-target="#deleteOrganizerModal">Delete</a>
					</div>
				</div>
			</div>
		</span>
	</div>
</div>
<button class="btn btn-primary float-start" data-bs-toggle="modal" data-bs-target="#createOrganizerModal">Create new</button>

<div class="modal fade" id="deleteOrganizerModal" tabindex=-1>
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Creating organizer</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<span> Are you sure you want to delete <span data-bind="text: activeOrganizer().name"></span>?</span>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" data-bs-dismiss="modal" data-bind="click: deleteOrganizer">
					Delete
				</button>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="createOrganizerModal" tabindex=-1>
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Creating organizer</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<span>Enter a unique name for the new organizer:</span>
				<input data-bind="textInput: newOrganizerName"></input>
				<p />
				<span class="text-danger" data-bind="hidden: newOrganizerNameValid">The name must be unique and not empty.</span>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal" data-bind="click: createNewOrganizer, enable: newOrganizerNameValid">
					Create
				</button>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="renameOrganizerModal" tabindex=-1>
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Renaming organizer</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<span>Enter a unique name for the organizer <span data-bind="text: activeOrganizer().name"></span>:</span>
				<input data-bind="textInput: newOrganizerName"></input>
				<p />
				<span class="text-danger" data-bind="hidden: newOrganizerNameValid">The name must be unique and not empty.</span>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal" data-bind="click: renameOrganizer, enable: newOrganizerNameValid">
					Rename
				</button>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="createOrganizerFailure" tabindex=-1>
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Creating organizer</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<span>Created successfully</span>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="somethingWentWrongModal" tabindex=-1>
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Error</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<span>Something went wrong</span>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
			</div>
		</div>
	</div>
</div>