<script type="text/javascript">
	ko.Mapper.Section = {
		create: function(options) {
			return new SectionVM(options.data, options.parent);
		}
	}

	/*
		sectionData - { id - int, name - string }
		parent - object
	*/
	function SectionVM(sectionData, parent) {
		this.organizerID = parent.organizerID;
		this.id = ko.utils.get(sectionData.id);
		this.name = ko.observable(ko.utils.get(sectionData.name)).extend({ store : true });
		this.type = ko.observable(ko.utils.get(sectionData.type));
		this.loading = false;
		this.parent = parent;

		function loader(target) {
			if (target.loading != false)
				return;
			fetch("/Organizers/" + target.organizerID + "/section/" + target.id)
			.then(result => result.json())
			.then(json => ko.mapping.fromJS(json, { "sections" : ko.Mapper.Section }, target));
			//Free up memory
			delete target.loading;
		}

		this.sections = ko.onDemandObservableArray(loader, this);
		this.content = ko.onDemandObservable(loader, this).extend({ store : true });

		this.SaveContent = function() {
			var value = this.content();
			fetch("/Organizers/" + this.organizerID + "/section/" + this.id + "/setContent", {
				method : "POST",
				headers : {
					"Content-Type": "text/plain"
				},
				body : this.content()
			})
			.then(response => {
				//Needs proper error-checks
				this.content(value);
				this.content.commit();
			});
		}

		this.RevertContent = function() {
			this.content.revert();
		}
	}
</script>